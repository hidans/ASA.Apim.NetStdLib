//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebshopBasketManagement_WebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", ConfigurationName="WebshopBasketManagement_WebService.WebshopBasketManagement_Service")]
    public interface WebshopBasketManagement_Service
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement:ExistsReservation" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ExistsReservationResponse> ExistsReservationAsync(WebshopBasketManagement_WebService.ExistsReservationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement:GetCountCurrently" +
            "AvailableCourse", ReplyAction="*")]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseResponse> GetCountCurrentlyAvailableCourseAsync(WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement:RemoveAllOutdated" +
            "Reservations", ReplyAction="*")]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsResponse> RemoveAllOutdatedReservationsAsync(WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement:RemoveReservation" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveReservationResponse> RemoveReservationAsync(WebshopBasketManagement_WebService.RemoveReservationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement:ReserveCourseEnro" +
            "llment", ReplyAction="*")]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ReserveCourseEnrollmentResponse> ReserveCourseEnrollmentAsync(WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistsReservationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExistsReservation", Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public WebshopBasketManagement_WebService.ExistsReservationRequestBody Body;
        
        public ExistsReservationRequest()
        {
        }
        
        public ExistsReservationRequest(WebshopBasketManagement_WebService.ExistsReservationRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement")]
    public partial class ExistsReservationRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string portalOrderID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string backendReservationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime reservationTimeout;
        
        public ExistsReservationRequestBody()
        {
        }
        
        public ExistsReservationRequestBody(string portalOrderID, string backendReservationID, System.DateTime reservationTimeout)
        {
            this.portalOrderID = portalOrderID;
            this.backendReservationID = backendReservationID;
            this.reservationTimeout = reservationTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistsReservationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExistsReservation_Result", Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public WebshopBasketManagement_WebService.ExistsReservationResponseBody Body;
        
        public ExistsReservationResponse()
        {
        }
        
        public ExistsReservationResponse(WebshopBasketManagement_WebService.ExistsReservationResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement")]
    public partial class ExistsReservationResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool return_value;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string backendReservationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime reservationTimeout;
        
        public ExistsReservationResponseBody()
        {
        }
        
        public ExistsReservationResponseBody(bool return_value, string backendReservationID, System.DateTime reservationTimeout)
        {
            this.return_value = return_value;
            this.backendReservationID = backendReservationID;
            this.reservationTimeout = reservationTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountCurrentlyAvailableCourse", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class GetCountCurrentlyAvailableCourseRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public string courseID;
        
        public GetCountCurrentlyAvailableCourseRequest()
        {
        }
        
        public GetCountCurrentlyAvailableCourseRequest(string courseID)
        {
            this.courseID = courseID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountCurrentlyAvailableCourse_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class GetCountCurrentlyAvailableCourseResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public int return_value;
        
        public GetCountCurrentlyAvailableCourseResponse()
        {
        }
        
        public GetCountCurrentlyAvailableCourseResponse(int return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAllOutdatedReservations", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class RemoveAllOutdatedReservationsRequest
    {
        
        public RemoveAllOutdatedReservationsRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAllOutdatedReservations_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class RemoveAllOutdatedReservationsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public int return_value;
        
        public RemoveAllOutdatedReservationsResponse()
        {
        }
        
        public RemoveAllOutdatedReservationsResponse(int return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveReservation", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class RemoveReservationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public string portalOrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=1)]
        public string backendReservationID;
        
        public RemoveReservationRequest()
        {
        }
        
        public RemoveReservationRequest(string portalOrderID, string backendReservationID)
        {
            this.portalOrderID = portalOrderID;
            this.backendReservationID = backendReservationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveReservation_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", IsWrapped=true)]
    public partial class RemoveReservationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public bool return_value;
        
        public RemoveReservationResponse()
        {
        }
        
        public RemoveReservationResponse(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReserveCourseEnrollmentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReserveCourseEnrollment", Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequestBody Body;
        
        public ReserveCourseEnrollmentRequest()
        {
        }
        
        public ReserveCourseEnrollmentRequest(WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement")]
    public partial class ReserveCourseEnrollmentRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string portalOrderID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string courseHeaderID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string participantID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string backendReservationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime reservationTimeout;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int portalQuantity;
        
        public ReserveCourseEnrollmentRequestBody()
        {
        }
        
        public ReserveCourseEnrollmentRequestBody(string portalOrderID, string courseHeaderID, string participantID, string backendReservationID, System.DateTime reservationTimeout, int portalQuantity)
        {
            this.portalOrderID = portalOrderID;
            this.courseHeaderID = courseHeaderID;
            this.participantID = participantID;
            this.backendReservationID = backendReservationID;
            this.reservationTimeout = reservationTimeout;
            this.portalQuantity = portalQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReserveCourseEnrollmentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReserveCourseEnrollment_Result", Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement", Order=0)]
        public WebshopBasketManagement_WebService.ReserveCourseEnrollmentResponseBody Body;
        
        public ReserveCourseEnrollmentResponse()
        {
        }
        
        public ReserveCourseEnrollmentResponse(WebshopBasketManagement_WebService.ReserveCourseEnrollmentResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/webshopBasketManagement")]
    public partial class ReserveCourseEnrollmentResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int return_value;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string backendReservationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime reservationTimeout;
        
        public ReserveCourseEnrollmentResponseBody()
        {
        }
        
        public ReserveCourseEnrollmentResponseBody(int return_value, string backendReservationID, System.DateTime reservationTimeout)
        {
            this.return_value = return_value;
            this.backendReservationID = backendReservationID;
            this.reservationTimeout = reservationTimeout;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface WebshopBasketManagement_ServiceChannel : WebshopBasketManagement_WebService.WebshopBasketManagement_Service, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class WebshopBasketManagement_ServiceClient : System.ServiceModel.ClientBase<WebshopBasketManagement_WebService.WebshopBasketManagement_Service>, WebshopBasketManagement_WebService.WebshopBasketManagement_Service
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WebshopBasketManagement_ServiceClient() : 
                base(WebshopBasketManagement_ServiceClient.GetDefaultBinding(), WebshopBasketManagement_ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WebshopBasketManagement_Service.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebshopBasketManagement_ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(WebshopBasketManagement_ServiceClient.GetBindingForEndpoint(endpointConfiguration), WebshopBasketManagement_ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebshopBasketManagement_ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WebshopBasketManagement_ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebshopBasketManagement_ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WebshopBasketManagement_ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebshopBasketManagement_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ExistsReservationResponse> WebshopBasketManagement_WebService.WebshopBasketManagement_Service.ExistsReservationAsync(WebshopBasketManagement_WebService.ExistsReservationRequest request)
        {
            return base.Channel.ExistsReservationAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ExistsReservationResponse> ExistsReservationAsync(string portalOrderID, string backendReservationID, System.DateTime reservationTimeout)
        {
            WebshopBasketManagement_WebService.ExistsReservationRequest inValue = new WebshopBasketManagement_WebService.ExistsReservationRequest();
            inValue.Body = new WebshopBasketManagement_WebService.ExistsReservationRequestBody();
            inValue.Body.portalOrderID = portalOrderID;
            inValue.Body.backendReservationID = backendReservationID;
            inValue.Body.reservationTimeout = reservationTimeout;
            return ((WebshopBasketManagement_WebService.WebshopBasketManagement_Service)(this)).ExistsReservationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseResponse> WebshopBasketManagement_WebService.WebshopBasketManagement_Service.GetCountCurrentlyAvailableCourseAsync(WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseRequest request)
        {
            return base.Channel.GetCountCurrentlyAvailableCourseAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseResponse> GetCountCurrentlyAvailableCourseAsync(string courseID)
        {
            WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseRequest inValue = new WebshopBasketManagement_WebService.GetCountCurrentlyAvailableCourseRequest();
            inValue.courseID = courseID;
            return ((WebshopBasketManagement_WebService.WebshopBasketManagement_Service)(this)).GetCountCurrentlyAvailableCourseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsResponse> WebshopBasketManagement_WebService.WebshopBasketManagement_Service.RemoveAllOutdatedReservationsAsync(WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsRequest request)
        {
            return base.Channel.RemoveAllOutdatedReservationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsResponse> RemoveAllOutdatedReservationsAsync()
        {
            WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsRequest inValue = new WebshopBasketManagement_WebService.RemoveAllOutdatedReservationsRequest();
            return ((WebshopBasketManagement_WebService.WebshopBasketManagement_Service)(this)).RemoveAllOutdatedReservationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveReservationResponse> WebshopBasketManagement_WebService.WebshopBasketManagement_Service.RemoveReservationAsync(WebshopBasketManagement_WebService.RemoveReservationRequest request)
        {
            return base.Channel.RemoveReservationAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebshopBasketManagement_WebService.RemoveReservationResponse> RemoveReservationAsync(string portalOrderID, string backendReservationID)
        {
            WebshopBasketManagement_WebService.RemoveReservationRequest inValue = new WebshopBasketManagement_WebService.RemoveReservationRequest();
            inValue.portalOrderID = portalOrderID;
            inValue.backendReservationID = backendReservationID;
            return ((WebshopBasketManagement_WebService.WebshopBasketManagement_Service)(this)).RemoveReservationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ReserveCourseEnrollmentResponse> WebshopBasketManagement_WebService.WebshopBasketManagement_Service.ReserveCourseEnrollmentAsync(WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequest request)
        {
            return base.Channel.ReserveCourseEnrollmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebshopBasketManagement_WebService.ReserveCourseEnrollmentResponse> ReserveCourseEnrollmentAsync(string portalOrderID, string courseHeaderID, string participantID, string backendReservationID, System.DateTime reservationTimeout, int portalQuantity)
        {
            WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequest inValue = new WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequest();
            inValue.Body = new WebshopBasketManagement_WebService.ReserveCourseEnrollmentRequestBody();
            inValue.Body.portalOrderID = portalOrderID;
            inValue.Body.courseHeaderID = courseHeaderID;
            inValue.Body.participantID = participantID;
            inValue.Body.backendReservationID = backendReservationID;
            inValue.Body.reservationTimeout = reservationTimeout;
            inValue.Body.portalQuantity = portalQuantity;
            return ((WebshopBasketManagement_WebService.WebshopBasketManagement_Service)(this)).ReserveCourseEnrollmentAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WebshopBasketManagement_Service))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WebshopBasketManagement_Service))
            {
                return new System.ServiceModel.EndpointAddress("https://iqiapimanagement-asa-dev.azure-api.net/webshopbasketmanagement");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WebshopBasketManagement_ServiceClient.GetBindingForEndpoint(EndpointConfiguration.WebshopBasketManagement_Service);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WebshopBasketManagement_ServiceClient.GetEndpointAddress(EndpointConfiguration.WebshopBasketManagement_Service);
        }
        
        public enum EndpointConfiguration
        {
            
            WebshopBasketManagement_Service,
        }
    }
}
